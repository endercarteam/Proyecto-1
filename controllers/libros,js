import { ObjectId, collection } from '../utils/db.js';
import { jsonBody, sendJSON } from '../utils/http.js';

const getLibros   = collection('libros');
const getReservas = collection('reservas');

export default async function librosCtrl(req, res) {
  const libros = await getLibros();
  const reservas = await getReservas();

  // 1) POST /libros
  if (req.method==='POST' && req.url === '/libros') {
    const datos = await jsonBody(req);
    await libros.insertOne({ ...datos, activo:true });
    return sendJSON(res, 201, { creado:true });
  }

  // 2) GET /libros/:id
  const matchId = req.url.match(/^\/libros\/([^\/]+)/);
  if (matchId && req.method==='GET') {
    const id = matchId[1];
    const lib = await libros.findOne({ _id: new ObjectId(id), activo:true });
    return sendJSON(res, lib?200:404, lib||{error:'No encontrado'});
  }

  // 3) GET /libros?autor=&genero=…
  if (req.method==='GET') {
    const filtros = { activo: true, ...req.query };
    const arr = await libros.find(filtros).toArray();
    return sendJSON(res, 200, arr);
  }

  // 4) PATCH /libros/:id
  if (matchId && req.method==='PATCH') {
    const id = matchId[1];
    const cambios = await jsonBody(req);
    await libros.updateOne({ _id: new ObjectId(id) }, { $set: cambios });
    return sendJSON(res, 200, { actualizado:true });
  }

  // 5) DELETE (soft) /libros/:id
  if (matchId && req.method==='DELETE') {
    const id = matchId[1];
    await libros.updateOne({ _id: new ObjectId(id) }, { $set: { activo:false } });
    return sendJSON(res, 200, { inhabilitado:true });
  }

  // 6) POST /libros/:id/reservar
  if (matchId && req.method==='POST' && req.url.endsWith('/reservar')) {
    const id = matchId[1];
    const { fechaReserva, fechaEntrega } = await jsonBody(req);
    await reservas.insertOne({
      libroId: new ObjectId(id),
      usuarioId: new ObjectId(req.user._id),
      fechaReserva,
      fechaEntrega
    });
    return sendJSON(res, 201, { reservado:true });
  }

  res.writeHead(405, {'Content-Type':'application/json'});
  res.end(JSON.stringify({ error:'Método no permitido' }));
}
